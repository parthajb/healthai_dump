<?php

// VC [mgt_promo_block_wp]
vc_map(array(
   "name" 			=> "MGT Promo Block",
   "category" 		=> 'CryptiBIT Content',
   "description"	=> "Multi-purpose block with content, background, fullwidth and parallax options",
   "base" 			=> "mgt_promo_block_wp",
   "class" 			=> "",
   "icon" 			=> "vc_mgt_promo_block",

   "params" 	=> array(
   		array(
			"type"			=> "mgt_separator",
			"heading" => "Background color settings",
			"param_name"	=> generate_separator_name(),
		),
   		array(
			"type"			=> "colorpicker",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Background color",
			"param_name"	=> "background_color",
			"std"			=> "#F5F5F5",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Overlay block content with semi-transparent background",
			"param_name"	=> "darken",
			"value"			=> array(
				"Yes"	=> "darken",
				"No"	=> "no-darken"
			),
			"description"	=> "Use this option if you have light background image and want to show light text on it.",
			"std"			=> "no-darken",
		),
		array(
			"type"			=> "colorpicker",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Overlay color",
			"param_name"	=> "darken_overlay_color",
			"dependency"	=> array(
				"element"	=> "darken",
				"value"		=> Array("darken"),
			),
			"std"			=> "rgba(0,0,0,0.3)",
			"description"	=> "Choose color with Alpha property to make overlay semi-transparent.",
		),
		array(
		    "type"          => "dropdown",
		    "holder"        => "div",
		    "class"         => "hide_in_vc_editor",
		    "admin_label"   => false,
		    "heading"       => "Add overlay gradient?",
		    "param_name"    => "darken_overlay_grad",
		    "value"         => array(
		    	"No" => "",
		        "Horizontal" => "left",
		        "Vertical"    => "top"
		    ),
		    "dependency"	=> array(
				"element"	=> "darken",
				"value"		=> Array("darken"),
			),
		    "std"           => "",
		),
		array(
			"type"			=> "colorpicker",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Overlay second color for gradient",
			"param_name"	=> "darken_overlay_color_grad",
			"dependency"	=> array(
				"element"	=> "darken_overlay_grad",
				"value"		=> Array("left", "top"),
			),
			"std"			=> "rgba(0,0,0,0.7)",
			"description"	=> "Choose color with Alpha property to make second overlay color semi-transparent.",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Overlay block content with semi-transparent background on hover.",
			"param_name"	=> "animated",
			"value"			=> array(
				"Yes"	=> "1",
				"No"	=> "0"
			),
			"description"	=> "Block background will fade to selected color on block mouse hover.",
			"std"			=> "0",
		),
		array(
			"type"			=> "colorpicker",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Overlay color for hover",
			"param_name"	=> "animated_overlay_color",
			"dependency"	=> array(
				"element"	=> "animated",
				"value"		=> Array("1"),
			),
			"std"			=> "rgba(0, 0, 0, 0.5)",
			"description"	=> "Choose color with Alpha property to make overlay semi-transparent.",
		),
		array(
			"type"			=> "mgt_separator",
			"param_name"	=> generate_separator_name(),
			"heading"		=> "Background image settings",
		),
		array(
			'type' => 'checkbox',
			'heading' => __( 'Add background image?', 'js_composer' ),
			'param_name' => 'background_image_enable',
		),
   		array(
			"type"			=> "attach_image",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Background image",
			"param_name"	=> "background_image_id",
			"std"			=> "",
			'dependency' => array(
				'element' => 'background_image_enable',
				'value' => 'true',
			),
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Background image repeat",
			"description"	=> "Use if you use pattern background image.",
			"param_name"	=> "background_repeat",
			"value"			=> array(
				"No repeat"	=> "no-repeat",
				"Repeat"	=> "repeat",
				"Repeat X"	=> "repeat-x",
				"Repeat Y"	=> "repeat-y"
			),
			"std"			=> "no-repeat",
			'dependency' => array(
				'element' => 'background_image_enable',
				'value' => 'true',
			),
			"edit_field_class" => "vc_col-xs-6",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Background image cover",
			"description"	=> "If enabled background image will fit block by width.",
			"dependency"	=> array(
				"element"	=> "parallax",
				"value"		=> Array("0"),
			),
			"param_name"	=> "coverimage",
			"value"			=> array(
				"Yes"	=> "1",
				"No"	=> "0"
			),
			"std"			=> "0",
			'dependency' => array(
				'element' => 'background_image_enable',
				'value' => 'true',
			),
			"edit_field_class" => "vc_col-xs-6",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Background image parallax",
			"description"	=> "Use background image with height few more than block height for correct parallax work.",
			"param_name"	=> "parallax",
			"value"			=> array(
				"None"	=> "",
				"Simple"	=> "fixed",
				"With fade"	=> "fade"
			),
			"std"			=> "",
			'dependency' => array(
				'element' => 'background_image_enable',
				'value' => 'true',
			),
			"edit_field_class" => "vc_col-xs-6",
		),
		array(
			"type"			=> "textfield",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Parallax speed",
			"description"	=> "Enter parallax speed ratio (Note: Default value is 1.5, min value is 1)",
			"param_name"	=> "parallax_speed",
			"std"			=> "1.5",
			'dependency' => array(
				'element' => 'background_image_enable',
				'value' => 'true',
			),
			"edit_field_class" => "vc_col-xs-6",
		),
		array(
			'type' => 'checkbox',
			'heading' => __( 'Use video background?', 'js_composer' ),
			'param_name' => 'video_bg',
			"description"	=> "If checked, video will be used as block content background.",
		),
		array(
			"type"			=> "textfield",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "YouTube link",
			"description"	=> "Add YouTube video link. Other video services is not supported.",
			"param_name"	=> "video_bg_url",
			"std"			=> "https://www.youtube.com/watch?v=lMJXxhRFO1k",
			'dependency' => array(
				'element' => 'video_bg',
				'value' => 'true',
			),
		),
		/// Block border
		array(
			"type"			=> "mgt_separator",
			"param_name"	=> generate_separator_name(),
			"heading"		=> "Block border settings",
		),
		array(
			'type' => 'checkbox',
			'heading' => __( 'Add block border?', 'js_composer' ),
			'param_name' => 'block_border',
			"description"	=> "Use this to add border to block.",
		),
		array(
			"type"			=> "textfield",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Block border width (in pixels)",
			"description"	=> "Add border width here, for example: 3",
			"param_name"	=> "block_border_width",
			"std"			=> "1",
			'dependency' => array(
				'element' => 'block_border',
				'value' => 'true',
			),
			"edit_field_class" => "vc_col-xs-6",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Block border style",
			"description"	=> "Select block border style.",
			"param_name"	=> "block_border_style",
			"value"			=> array(
				"Solid"	=> "solid",
				"Dashed"	=> "dashed",
				"Dotted"	=> "dotted",
				"Double"	=> "double",
				"Groove"	=> "groove",
				"Ridge"	=> "ridge",
				"Inset"	=> "inset",
				"Outset"	=> "outset",
			),
			"std"			=> "solid",
			'dependency' => array(
				'element' => 'block_border',
				'value' => 'true',
			),
			"edit_field_class" => "vc_col-xs-6",
		),
		array(
			"type"			=> "colorpicker",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Block border color",
			"param_name"	=> "block_color_border",
			"description"	=> "Select block border color.",
			"std"			=> "",
			'dependency' => array(
				'element' => 'block_border',
				'value' => 'true',
			),
			"edit_field_class" => "vc_col-xs-6",
		),
		array(
			"type"			=> "colorpicker",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Block hover border color",
			"param_name"	=> "block_color_borderhover",
			"description"	=> "Select block hover border color.",
			"std"			=> "",
			'dependency' => array(
				'element' => 'block_border',
				'value' => 'true',
			),
			"edit_field_class" => "vc_col-xs-6",
		),
		///
		array(
			"type"			=> "mgt_separator",
			"param_name"	=> generate_separator_name(),
			"heading"		=> "Block and content settings",
		),
		array(
			"type"			=> "textfield",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Block height (px)",
			"description"	=> "Leave empty to use uploaded background image height or fit to content. For example: 600px",
			"param_name"	=> "block_height",
			"edit_field_class" => "vc_col-xs-6",
			"std"			=> "",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Block content vertical align",
			"param_name"	=> "content_va",
			"value"			=> array(
				"Top"	=> "top",
				"Middle"	=> "middle",
				"Bottom"	=> "bottom"
			),
			"edit_field_class" => "vc_col-xs-6",
			"std"			=> "middle",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Block round edges",
			"param_name"	=> "block_round_edges",
			"value"			=> array(
				"Disable"	=> "disable",
				"Small"	=> "small",
				"Medium"	=> "medium",
				"Large"	=> "large",
				"Full"	=> "full"
			),
			"description"	=> "Change block border radius (round edges).",
			"std"			=> "disable",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Text color",
			"description"	=> "Select black color if you use light/white background in block. You can specify custom colors on Format tab.",
			"param_name"	=> "text_color",
			"value"			=> array(
				"Black"	=> "black",
				"White"	=> "white"
			),
			"std"			=> "black",
			"edit_field_class" => "vc_col-xs-6",
		),
				array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Text color on block mouse hover",
			"param_name"	=> "text_color_hover",
			"value"			=> array(
				"Change to white"	=> "1",
				"Do not change"	=> "0"
			),
			"description"	=> "Change text and links color to white on block mouse hover. Useful if you change your block background color to dark on mouse hover.",
			"std"			=> "0",
			"edit_field_class" => "vc_col-xs-6",
		),
		array(
			"type"			=> "textfield",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Block content link (url)",
			"description"	=> "Add url here if you want to have link for overall block content. If you use this option you must NOT add any links inside block content, because this will break HTML layouts.",
			"param_name"	=> "block_url",
			"std"			=> "",
		),
		array(
			'type' => 'checkbox',
			'heading' => 'Open block content link in new tab?',
			'param_name' => 'block_url_target_blank',
			"description"	=> "Open link in new browser tab/window.",
		),
		array(
			"type"			=> "textarea_html",
			"holder"		=> "div",
			"class" 		=> "mgt-promo-block-content-html",
			"admin_label" 	=> false,
			"heading"		=> "Block content",
			"param_name"	=> "content",
			"std"			=> '<p style="text-align: left;">PARAGRAPH text</p>
<h1 style="text-align: left;">H1 Header text</h1>
<h2 style="text-align: left;">H2 Header text</h2>
<h3 style="text-align: left;">H3 Header text</h3>
<h4 style="text-align: left;">H4 Header text</h4>
<h5 style="text-align: left;">H5 Header text</h5>
<em>EM tag text</em>
<i>I tag text</i>
<strong>Strong tag text</strong>
<b>B tag text</b>',
		),
		array(
			"type"			=> "mgt_separator",
			"param_name"	=> generate_separator_name(),
			"heading"		=> "Block effects and animations",
		),
		array(
			'type' => 'checkbox',
			'heading' => __( 'Add block shadow effect?', 'js_composer' ),
			'param_name' => 'block_shadow_effect',
			"description"	=> "Use this to add shadow to overall block.",
			"edit_field_class" => "vc_col-xs-6",
		),
		array(
			'type' => 'checkbox',
			'heading' => __( 'Add block shadow effect on hover?', 'js_composer' ),
			'param_name' => 'block_hover_shadow_effect',
			"description"	=> "Use this to add shadow to block hover.",
			"edit_field_class" => "vc_col-xs-6",
		),
		array(
			'type' => 'checkbox',
			'heading' => __( 'Add mouse hover block moving effect?', 'js_composer' ),
			'param_name' => 'block_hover_effect',
			"description"	=> "Use this to add block moving effect on block hover.",
			"edit_field_class" => "vc_col-xs-6",
		),
		array(
			'type' => 'checkbox',
			'heading' => __( 'Show block content only on mouse hover?', 'js_composer' ),
			'param_name' => 'block_content_onhover',
			"description"	=> "Use this to hide block content by default and show it only on block mouse hover.",
		),
		// CSS Animations
		vc_map_add_css_animation( true ),
		/* Top Image */
		array(
			"type"			=> "mgt_separator",
			"param_name"	=> generate_separator_name(),
			"heading"		=> "Top image settings",
			"group"			=> "Top image",
		),
		array(
			'type' => 'checkbox',
			'heading' => __( 'Add top image?', 'js_composer' ),
			'param_name' => 'top_image_enable',
			"group"			=> "Top image",
			'description' => __( 'Enable to show image at the top of your promo block (above promo block content).', 'js_composer' ),
		),
   		array(
			"type"			=> "attach_image",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Top image",
			"param_name"	=> "top_image_id",
			"std"			=> "",
			'dependency' => array(
				'element' => 'top_image_enable',
				'value' => 'true',
			),
			"group"			=> "Top image",
		),
		array(
			"type"			=> "colorpicker",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Top image background color",
			"param_name"	=> "top_image_background_color",
			"description"	=> "Use if you have transparent PNG background image",
			'dependency' => array(
				'element' => 'top_image_enable',
				'value' => 'true',
			),
			"group"			=> "Top image",
			"std"			=> "",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Background image size",
			"param_name"	=> "top_image_background_size",
			"value"			=> array(
				"Cover all space"	=> "cover",
				"Keep original size"	=> "auto",
			),
			'dependency' => array(
				'element' => 'top_image_enable',
				'value' => 'true',
			),
			"group"			=> "Top image",
			"description"	=> "Change background image size.",
			"std"			=> "cover",
			"group"			=> "Top image",
		),
		array(
			"type"			=> "textfield",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Top image height (px)",
			"description"	=> "Leave empty to use theme predefined top image height (250). Example: 400",
			"param_name"	=> "top_image_height",
			"std"			=> "",
			'dependency' => array(
				'element' => 'top_image_enable',
				'value' => 'true',
			),
			"group"			=> "Top image",
		),
		array(
			"type"			=> "textfield",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Top image link (url)",
			"description"	=> "Add url here if you want to have link for top image.",
			"param_name"	=> "top_image_url",
			"std"			=> "",
			'dependency' => array(
				'element' => 'top_image_enable',
				'value' => 'true',
			),
			"group"			=> "Top image",
		),
		/* Button */
		array(
			"type"			=> "mgt_separator",
			"param_name"	=> generate_separator_name(),
			"heading"		=> "Button settings",
			"group"			=> "Button",
		),
		array(
			"type"			=> "vc_link",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Button text and link",
			"description"	=> "Leave empty if you don't need button.",
			"param_name"	=> "button_url",
			"std"			=> "",
			"group"			=> "Button",
		),
		array(
			'type' => 'checkbox',
			'heading' => 'Open link in lightbox?',
			'param_name' => 'button_link_lightbox',
			"description"	=> "Open link in lightbox (you can use link to Youtube, Vimeo video or image file to open it in lightbox).",
			"group"			=> "Button",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Button style",
			"param_name"	=> "button_style",
			"value"			=> array(
				"Default"	=> "solid",
				"Black"	=> "solid-invert",
				"Grey"	=> "grey",
				"Bordered"	=> "bordered",
				"Bordered Black"	=> "borderedblack",
				"Bordered Grey"	=> "borderedgrey",
				"Bordered White"	=> "borderedwhite",
				"Red"	=> "red",
				"Green"	=> "green",
				"Text link dark"	=> "text",
				"Text link light (use on dark backgrounds)"	=> "textwhite"
			),
			"description"	=> "Change button style",
			"std"			=> "solid",
			"group"			=> "Button",
			"edit_field_class" => "vc_col-xs-6",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Button round edges",
			"param_name"	=> "button_round_edges",
			"value"			=> array(
				"Disable"	=> "disable",
				"Small"	=> "small",
				"Medium"	=> "medium",
				"Large"	=> "large",
				"Full"	=> "full"
			),
			"description"	=> "Change button border radius (round edges)",
			"std"			=> "disable",
			"group"			=> "Button",
			"edit_field_class" => "vc_col-xs-6",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Button size",
			"param_name"	=> "button_size",
			"value"			=> array(
				"Small"	=> "small",
				"Normal"	=> "normal",
				"Large"	=> "large"
			),
			"description"	=> "",
			"std"			=> "normal",
			"group"			=> "Button",
			"edit_field_class" => "vc_col-xs-6",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Button horizontal align",
			"param_name"	=> "button_align",
			"value"			=> array(
				"Left"	=> "left",
				"Center"	=> "center",
				"Right"	=> "right"
			),
			"description"	=> "",
			"std"			=> "center",
			"group"			=> "Button",
			"edit_field_class" => "vc_col-xs-6",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Button text size",
			"param_name"	=> "button_text_size",
			"value"			=> array(
				"Small"	=> "small",
				"Normal"	=> "normal",
				"Large"	=> "large"
			),
			"description"	=> "",
			"std"			=> "normal",
			"group"			=> "Button",
			"edit_field_class" => "vc_col-xs-6",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Button text transform",
			"param_name"	=> "button_text_transform",
			"value"			=> array(
				"None"	=> "none",
				"UPPERCASE"	=> "uppercase"
			),
			"description"	=> "",
			"std"			=> "none",
			"group"			=> "Button",
			"edit_field_class" => "vc_col-xs-6",
		),
		array(
			'type' => 'checkbox',
			'heading' => __( 'Add top margin?', 'js_composer' ),
			'param_name' => 'button_top_margin',
			"description"	=> "Use this if you want to add additional space between button and your top content.",
			"group"			=> "Button",
		),
		// Button icon
		array(
			"type"			=> "mgt_separator",
			"param_name"	=> generate_separator_name(),
			"heading"		=> "Button icon settings",
			"group"			=> "Button",
		),
		array(
			'type' => 'checkbox',
			'heading' => __( 'Add icon?', 'js_composer' ),
			'param_name' => 'button_icon',
			"group"			=> "Button",
			"edit_field_class" => "vc_col-xs-6",
		),
		array(
			'type' => 'checkbox',
			'heading' => __( 'Add icon separator line?', 'js_composer' ),
			'param_name' => 'button_icon_separator',
			'dependency' => array(
				'element' => 'button_icon',
				'value' => 'true',
			),
			"group"			=> "Button",
			"edit_field_class" => "vc_col-xs-6",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Button icon alignment",
			"param_name"	=> "button_icon_position",
			"value"			=> array(
				"Left"	=> "left",
				"Right"	=> "right"
			),
			"description"	=> "",
			"std"			=> "left",
			'dependency' => array(
				'element' => 'button_icon',
				'value' => 'true',
			),
			"group"			=> "Button",
		),
		array(
			'type' => 'dropdown',
			'heading' => __( 'Icon library', 'js_composer' ),
			'value' => array(
				__( 'Font Awesome', 'js_composer' ) => 'fontawesome',
				__( 'Open Iconic', 'js_composer' ) => 'openiconic',
				__( 'Typicons', 'js_composer' ) => 'typicons',
				__( 'Entypo', 'js_composer' ) => 'entypo',
				__( 'Linecons', 'js_composer' ) => 'linecons',
				__( 'Mono Social', 'js_composer' ) => 'monosocial',
				__( 'Material', 'js_composer' ) => 'material',
				__( 'Pe7 Stroke', 'js_composer' ) => 'pe7stroke',
			),
			'dependency' => array(
				'element' => 'button_icon',
				'value' => 'true',
			),
			'admin_label' => true,
			'param_name' => 'icon_type',
			'description' => __( 'Select icon library.', 'js_composer' ),
			"std"		=> "fontawesome",
			"group"			=> "Button",
		),
		array(
			'type' => 'iconpicker',
			'heading' => __( 'Icon', 'js_composer' ),
			'param_name' => 'icon_fontawesome',
			'value' => 'fa fa-adjust',
			// default value to backend editor admin_label
			'settings' => array(
				'emptyIcon' => false,
				// default true, display an "EMPTY" icon?
				'iconsPerPage' => 4000,
				// default 100, how many icons per/page to display, we use (big number) to display all icons in single page
				'type' => 'fontawesome',
			),
			'dependency' => array(
				'element' => 'icon_type',
				'value' => 'fontawesome',
			),
			'description' => __( 'Select icon from library.', 'js_composer' ),
			"group"			=> "Button",
		),
		array(
			'type' => 'iconpicker',
			'heading' => __( 'Icon', 'js_composer' ),
			'param_name' => 'icon_pe7stroke',
			'value' => 'pe-7s-album',
			// default value to backend editor admin_label
			'settings' => array(
				'emptyIcon' => false,
				// default true, display an "EMPTY" icon?
				'iconsPerPage' => 4000,
				'type' => 'pe7stroke',
				// default 100, how many icons per/page to display, we use (big number) to display all icons in single page
			),
			'dependency' => array(
				'element' => 'icon_type',
				'value' => 'pe7stroke',
			),
			'description' => __( 'Select icon from library.', 'js_composer' ),
			"group"			=> "Button",
		),
		array(
			'type' => 'iconpicker',
			'heading' => __( 'Icon', 'js_composer' ),
			'param_name' => 'icon_openiconic',
			'value' => 'vc-oi vc-oi-dial',
			// default value to backend editor admin_label
			'settings' => array(
				'emptyIcon' => false,
				// default true, display an "EMPTY" icon?
				'type' => 'openiconic',
				'iconsPerPage' => 4000,
				// default 100, how many icons per/page to display
			),
			'dependency' => array(
				'element' => 'icon_type',
				'value' => 'openiconic',
			),
			'description' => __( 'Select icon from library.', 'js_composer' ),
			"group"			=> "Button",
		),
		array(
			'type' => 'iconpicker',
			'heading' => __( 'Icon', 'js_composer' ),
			'param_name' => 'icon_typicons',
			'value' => 'typcn typcn-adjust-brightness',
			// default value to backend editor admin_label
			'settings' => array(
				'emptyIcon' => false,
				// default true, display an "EMPTY" icon?
				'type' => 'typicons',
				'iconsPerPage' => 4000,
				// default 100, how many icons per/page to display
			),
			'dependency' => array(
				'element' => 'icon_type',
				'value' => 'typicons',
			),
			'description' => __( 'Select icon from library.', 'js_composer' ),
			"group"			=> "Button",
		),
		array(
			'type' => 'iconpicker',
			'heading' => __( 'Icon', 'js_composer' ),
			'param_name' => 'icon_entypo',
			'value' => 'entypo-icon entypo-icon-note',
			// default value to backend editor admin_label
			'settings' => array(
				'emptyIcon' => false,
				// default true, display an "EMPTY" icon?
				'type' => 'entypo',
				'iconsPerPage' => 4000,
				// default 100, how many icons per/page to display
			),
			'dependency' => array(
				'element' => 'icon_type',
				'value' => 'entypo',
			),
			'description' => __( 'Select icon from library.', 'js_composer' ),
			"group"			=> "Button",
		),
		array(
			'type' => 'iconpicker',
			'heading' => __( 'Icon', 'js_composer' ),
			'param_name' => 'icon_linecons',
			'value' => 'vc_li vc_li-heart',
			// default value to backend editor admin_label
			'settings' => array(
				'emptyIcon' => false,
				// default true, display an "EMPTY" icon?
				'type' => 'linecons',
				'iconsPerPage' => 4000,
				// default 100, how many icons per/page to display
			),
			'dependency' => array(
				'element' => 'icon_type',
				'value' => 'linecons',
			),
			'description' => __( 'Select icon from library.', 'js_composer' ),
			"group"			=> "Button",
		),
		array(
			'type' => 'iconpicker',
			'heading' => __( 'Icon', 'js_composer' ),
			'param_name' => 'icon_monosocial',
			'value' => 'vc-mono vc-mono-fivehundredpx',
			// default value to backend editor admin_label
			'settings' => array(
				'emptyIcon' => false,
				// default true, display an "EMPTY" icon?
				'type' => 'monosocial',
				'iconsPerPage' => 4000,
				// default 100, how many icons per/page to display
			),
			'dependency' => array(
				'element' => 'icon_type',
				'value' => 'monosocial',
			),
			'description' => __( 'Select icon from library.', 'js_composer' ),
			"group"			=> "Button",
		),
		array(
			'type' => 'iconpicker',
			'heading' => __( 'Icon', 'js_composer' ),
			'param_name' => 'icon_material',
			'value' => 'vc-material vc-material-cake',
			// default value to backend editor admin_label
			'settings' => array(
				'emptyIcon' => false,
				// default true, display an "EMPTY" icon?
				'type' => 'material',
				'iconsPerPage' => 4000,
				// default 100, how many icons per/page to display
			),
			'dependency' => array(
				'element' => 'icon_type',
				'value' => 'material',
			),
			'description' => __( 'Select icon from library.', 'js_composer' ),
			"group"			=> "Button",
		),
		array(
			"type"			=> "mgt_separator",
			"param_name"	=> generate_separator_name(),
			"heading"		=> "Button animation and effects",
			"group"			=> "Button",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Show button on block hover",
			"param_name"	=> "button_show_onhover",
			"value"			=> array(
				"No (Show button always)"	=> "0",
				"Yes (Hide button by default)"	=> "1"
			),
			"description"	=> "Enable this to show button only on hover.",
			"std"			=> "0",
			"group"			=> "Button",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Button hover effect",
			"param_name"	=> "hover_effect",
			"value"			=> array(
				"Default"	=> "default",
				"[Shape] Grow"	=> "grow",
				"[Shape] Shrink"	=> "shrink",
				"[Shape] Pulse"	=> "pulse",
				"[Shape] Pulse Grow"	=> "pulse-grow",
				"[Shape] Pulse Shrink"	=> "pulse-shrink",
				"[Shape] Push"	=> "push",
				"[Shape] Pop"	=> "pop",
				"[Shape] Bounce In"	=> "bounce-in",
				"[Shape] Bounce Out"	=> "bounce-out",
				"[Shape] Rotate"	=> "rotate",
				"[Shape] Grow Rotate"	=> "grow-rotate",
				"[Shape] Float"	=> "float",
				"[Shape] Sink"	=> "sink",
				"[Shape] Bob"	=> "bob",
				"[Shape] Hang"	=> "hang",
				"[Shape] Skew"	=> "skew",
				"[Shape] Skew Forward"	=> "skew-forward",
				"[Shape] Skew Backward"	=> "skew-backward",
				"[Shape] Wobble Horizontal"	=> "wobble-horizontal",
				"[Shape] Wobble Vertical"	=> "wobble-vertical",
				"[Shape] Wobble To Bottom Right"	=> "wobble-to-bottom-right",
				"[Shape] Wobble To Top Right"	=> "wobble-to-top-right",
				"[Shape] Wobble Top"	=> "wobble-top",
				"[Shape] Wobble Bottom"	=> "wobble-bottom",
				"[Shape] Wobble Skew"	=> "wobble-skew",
				"[Shape] Buzz"	=> "buzz",
				"[Shape] Buzz Out"	=> "buzz-out",

				"[Background] Sweep To Right"	=> "sweep-to-right",
				"[Background] Sweep To Left"	=> "sweep-to-left",
				"[Background] Sweep To Bottom"	=> "sweep-to-bottom",
				"[Background] Sweep To Top"	=> "sweep-to-top",
				"[Background] Bounce To Right"	=> "bounce-to-right",
				"[Background] Bounce To Left"	=> "bounce-to-left",
				"[Background] Bounce To Bottom"	=> "bounce-to-bottom",
				"[Background] Bounce To Top"	=> "bounce-to-top",

				"[Icon] Icon Back"	=> "icon-back",
				"[Icon] Icon Forward"	=> "icon-forward",
				"[Icon] Icon Down"	=> "icon-down",
				"[Icon] Icon Up"	=> "icon-up",
				"[Icon] Icon Spin"	=> "icon-spin",
				"[Icon] Icon Drop"	=> "icon-drop",
				"[Icon] Icon Grow"	=> "icon-grow",
				"[Icon] Icon Shrink"	=> "icon-shrink",
				"[Icon] Icon Pulse"	=> "icon-pulse",
				"[Icon] Icon Pulse Grow"	=> "icon-pulse-grow",
				"[Icon] Icon Pulse Shrink"	=> "icon-pulse-shrink",
				"[Icon] Icon Push"	=> "icon-push",
				"[Icon] Icon Pop"	=> "icon-pop",
				"[Icon] Icon Bounce"	=> "icon-bounce",
				"[Icon] Icon Rotate"	=> "icon-rotate",
				"[Icon] Icon Grow Rotate"	=> "icon-grow-rotate",
				"[Icon] Icon Float"	=> "icon-float",
				"[Icon] Icon Sink"	=> "icon-sink",
				"[Icon] Icon Bob"	=> "icon-bob",
				"[Icon] Icon Hang"	=> "icon-hang",
				"[Icon] Icon Wobble Horizontal"	=> "icon-wobble-horizontal",
				"[Icon] Icon Wobble Vertical"	=> "icon-wobble-vertical",
				"[Icon] Icon Buzz"	=> "icon-buzz",
				"[Icon] Icon Buzz Out"	=> "icon-buzz-out",
			),
			"description"	=> "Change button hover effect (<a href='http://ianlunn.github.io/Hover/' target='_blank'>Preview effects</a>). Please note that some effects works only for regular button styles, without style overrides and round edges.",
			"std"			=> "default",
			"group"			=> "Button",
		),
		/* Button custom styles */
		array(
			"type"			=> "mgt_separator",
			"param_name"	=> generate_separator_name(),
			"heading"		=> "Button custom styles",
			"group"			=> "Button",
		),
		array(
			'type' => 'checkbox',
			'heading' => __( 'Override this button styles?', 'js_composer' ),
			'param_name' => 'button_override',
			"description"	=> "Click and scroll down to show advanced button styles options. Please note that custom styled buttons and gradients backgrounds does not support all Button hover effect styles.",
			"group"			=> "Button",
		),
		array(
			"type"			=> "dropdown",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Button font weight",
			"param_name"	=> "fontweight",
			"value"			=> array(
				"Normal"	=> "normal",
				"Bold"	=> "bold",
				"100"	=> "100",
				"200"	=> "200",
				"300"	=> "300",
				"400"	=> "400",
				"500"	=> "500",
				"600"	=> "600",
				"700"	=> "700",
				"800"	=> "800",
				"900"	=> "900"
			),
			"group"			=> "Custom Styles",
			"description"	=> "Make sure you loaded font weight that you selected in Google Fonts settings for Header font in Theme Control Panel.",
			"std"			=> "normal",
			"group"			=> "Button",
			'dependency' => array(
				'element' => 'button_override',
				'value' => 'true',
			),
		),
		array(
			"type"			=> "colorpicker",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Button background color",
			"param_name"	=> "button_color_bg",
			"description"	=> "Override button background color.",
			"group"			=> "Button",
			"std"			=> "",
			'dependency' => array(
				'element' => 'button_override',
				'value' => 'true',
			),
		),
		array(
			'type' => 'checkbox',
			'heading' => __( 'Add gradient to button background color?', 'js_composer' ),
			'param_name' => 'button_bg_grad',
			"description"	=> "Use this to add second gradient color for button background.",
			"group"			=> "Button",
			'dependency' => array(
				'element' => 'button_override',
				'value' => 'true',
			),
		),
		array(
			"type"			=> "colorpicker",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Button background second color for gradient",
			"param_name"	=> "button_color_bggrad",
			"description"	=> "Override button background color for gradient.",
			"group"			=> "Button",
			"std"			=> "",
			'dependency' => array(
				'element' => 'button_bg_grad',
				'value' => 'true',
			),
		),
		array(
			"type"			=> "colorpicker",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Button hover background color",
			"param_name"	=> "button_color_bghover",
			"description"	=> "Override button hover background color.",
			"group"			=> "Button",
			"std"			=> "",
			'dependency' => array(
				'element' => 'button_override',
				'value' => 'true',
			),
		),
		array(
			'type' => 'checkbox',
			'heading' => __( 'Add gradient to button hover background color?', 'js_composer' ),
			'param_name' => 'button_bghover_grad',
			"description"	=> "Use this to add second gradient color for button hover background.",
			"group"			=> "Button",
			'dependency' => array(
				'element' => 'button_override',
				'value' => 'true',
			),
		),
		array(
			"type"			=> "colorpicker",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Button hover background second color for gradient",
			"param_name"	=> "button_color_bghovergrad",
			"description"	=> "Override button hover background color for gradient.",
			"group"			=> "Button",
			"std"			=> "",
			'dependency' => array(
				'element' => 'button_bghover_grad',
				'value' => 'true',
			),
		),
		array(
			"type"			=> "colorpicker",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Button text color",
			"param_name"	=> "button_color_text",
			"description"	=> "Override button text color.",
			"group"			=> "Button",
			"std"			=> "",
			'dependency' => array(
				'element' => 'button_override',
				'value' => 'true',
			),
			"edit_field_class" => "vc_col-xs-6",
		),
		array(
			"type"			=> "colorpicker",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Button hover text color",
			"param_name"	=> "button_color_texthover",
			"description"	=> "Override button hover text color.",
			"group"			=> "Button",
			"std"			=> "",
			'dependency' => array(
				'element' => 'button_override',
				'value' => 'true',
			),
			"edit_field_class" => "vc_col-xs-6",
		),
		array(
			'type' => 'checkbox',
			'heading' => __( 'Enable button border?', 'js_composer' ),
			'param_name' => 'button_border',
			"description"	=> "Use this to add solid border to button.",
			"group"			=> "Button",
			'dependency' => array(
				'element' => 'button_override',
				'value' => 'true',
			),
		),
		array(
			"type"			=> "textfield",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Border width (in pixels)",
			"description"	=> "Add border width here, for example: 3",
			"param_name"	=> "button_border_width",
			"group"			=> "Button",
			"std"			=> "2",
			'dependency' => array(
				'element' => 'button_border',
				'value' => 'true',
			),
		),
		array(
			"type"			=> "colorpicker",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Button border color",
			"param_name"	=> "button_color_border",
			"description"	=> "Override button border color.",
			"group"			=> "Button",
			"std"			=> "",
			'dependency' => array(
				'element' => 'button_border',
				'value' => 'true',
			),
			"edit_field_class" => "vc_col-xs-6",
		),
		array(
			"type"			=> "colorpicker",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "Button hover border color",
			"param_name"	=> "button_color_borderhover",
			"description"	=> "Override button hover border color.",
			"group"			=> "Button",
			"std"			=> "",
			'dependency' => array(
				'element' => 'button_border',
				'value' => 'true',
			),
			"edit_field_class" => "vc_col-xs-6",
		),
		/* Block format */
		array(
			"type"			=> "mgt_separator",
			"param_name"	=> generate_separator_name(),
			"heading"		=> "Override block content elements styles",
			"group"			=> "Format",
		),
		array(
			"type"			=> "textfield",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "&lt;H1&gt; tag font size",
			"description"	=> "For ex.: 25px",
			"param_name"	=> "format_h1_fontsize",
			"group"			=> "Format",
			"std"			=> "",
		),
		array(
			"type"			=> "textfield",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "&lt;H1&gt; margin",
			"description"	=> "For ex.: 0 0 30px 0",
			"param_name"	=> "format_h1_margin",
			"group"			=> "Format",
			"std"			=> "",
		),
		array(
			"type"			=> "colorpicker",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "&lt;H1&gt; tag text color",
			"param_name"	=> "format_h1_color",
			"description"	=> "Override tag text color for this block.",
			"group"			=> "Format",
			"std"			=> "",
		),
		array(
			"type"			=> "textfield",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "&lt;H2&gt; tag font size",
			"description"	=> "For ex.: 20px",
			"param_name"	=> "format_h2_fontsize",
			"group"			=> "Format",
			"std"			=> "",
		),
		array(
			"type"			=> "textfield",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "&lt;H2&gt; margin",
			"description"	=> "For ex.: 0 0 20px 0",
			"param_name"	=> "format_h2_margin",
			"group"			=> "Format",
			"std"			=> "",
		),
		array(
			"type"			=> "colorpicker",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "&lt;H2&gt; tag text color",
			"param_name"	=> "format_h2_color",
			"description"	=> "Override tag text color for this block.",
			"group"			=> "Format",
			"std"			=> "",
		),
		array(
			"type"			=> "textfield",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "&lt;H3&gt; tag font size",
			"description"	=> "For ex.: 15px",
			"param_name"	=> "format_h3_fontsize",
			"group"			=> "Format",
			"std"			=> "",
		),
		array(
			"type"			=> "textfield",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "&lt;H3&gt; margin",
			"description"	=> "For ex.: 0 0 10px 0",
			"param_name"	=> "format_h3_margin",
			"group"			=> "Format",
			"std"			=> "",
		),
		array(
			"type"			=> "colorpicker",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "&lt;H3&gt; tag text color",
			"param_name"	=> "format_h3_color",
			"description"	=> "Override tag text color for this block.",
			"group"			=> "Format",
			"std"			=> "",
		),
		array(
			"type"			=> "textfield",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "&lt;P&gt; tag font size",
			"description"	=> "For ex.: 12px",
			"param_name"	=> "format_p_fontsize",
			"group"			=> "Format",
			"std"			=> "",
		),
		array(
			"type"			=> "textfield",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "&lt;P&gt; margin",
			"description"	=> "For ex.: 0 0 5px 0",
			"param_name"	=> "format_p_margin",
			"group"			=> "Format",
			"std"			=> "",
		),
		array(
			"type"			=> "colorpicker",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "&lt;P&gt; tag text color",
			"param_name"	=> "format_p_color",
			"description"	=> "Override tag text color for this block.",
			"group"			=> "Format",
			"std"			=> "",
		),
		array(
			"type"			=> "colorpicker",
			"holder"		=> "div",
			"class" 		=> "hide_in_vc_editor",
			"admin_label" 	=> false,
			"heading"		=> "&lt;A&gt; link tag text color",
			"param_name"	=> "format_a_color",
			"description"	=> "Override tag text color for this block.",
			"group"			=> "Format",
			"std"			=> "",
		),
		array(
		    'type' => 'css_editor',
		    'heading' => __( 'Css' ),
		    'param_name' => 'css',
		    'group' => __( 'Content Design options' ),
		),

   )


));
